name: Deployment (Full Release)

permissions:
  contents: write
  pull-requests: write
  actions: write

on:
  release:
    types:
      - published

jobs:
  pull_request:
    name: Full Release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout backend repository
        uses: actions/checkout@v4

      - name: Download executable from release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/kaihokori/raspycam/releases/latest)
          
          asset_url=$(echo "$release_response" | jq -r '.assets[] | select(.name == "raspycam") | .browser_download_url')
          
          curl -L -o raspycam -H "Authorization: token $GITHUB_TOKEN" "$asset_url"
          
          chmod +x raspycam

          pwd

      - name: Clone forked frontend repository
        env:
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
        run: |
          git clone https://github.com/${FORKED_REPO}.git rpi_cam_web_interface
          cd rpi_cam_web_interface

      - name: Add upstream repository and fetch latest changes
        run: |
          git remote add upstream https://github.com/silvanmelchior/rpi_cam_web_interface.git
          git fetch upstream
          git checkout master
          git merge upstream/master --allow-unrelated-histories

      - name: Create new branch for update
        run: |
          git checkout -b update-raspycam-${{ github.event.release.tag_name }}

      - name: Ensure directory exists in target
        run: |
          mkdir -p rpi_cam_web_interface/etc/raspycam

      - name: Transfer executable to forked repository
        run: |
          pwd
          cp ../raspycam ./etc/raspycam/

      - name: Stage, Commit, and Push Changes
        env:
          PAT: ${{ secrets.PAT }}
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
        run: |
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git add etc/raspycam/raspycam
          if git diff-index --quiet HEAD; then
            echo "No changes to commit, exiting."
            exit 0
          else
            git commit -m "Updating RasPyCam to ${{ github.event.release.tag_name }}"
            git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${FORKED_REPO}.git
            
            git push --force --set-upstream origin update-raspycam-${{ github.event.release.tag_name }}
          fi

      - name: Install GitHub CLI
        run: |
          sudo apt-get install -y gh

      - name: Fetch Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
        run: |
          RELEASE_URL="https://api.github.com/repos/kaihokori/raspycam/releases/tags/${{ github.event.release.tag_name }}"
          curl -s -H "Authorization: token $GITHUB_TOKEN" $RELEASE_URL | jq -r '.body' > release_notes.txt
          tail -n +2 release_notes.txt > release_notes_trimmed.txt

      - name: Create PR body file
        env:
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
        run: |
          echo "# Release Summary" > pr_body.txt
          echo "" >> pr_body.txt
          echo "This PR updates the RasPyCam executable to the latest version \`${{ github.event.release.tag_name }}\`, generated from the [RasPyCam](https://github.com/kaihokori/raspycam) repository." >> pr_body.txt
          echo "" >> pr_body.txt
          echo "## Changes Introduced" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "1. **Change X:**" >> pr_body.txt
          echo "   - [Text]" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "## Additional Notes" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "- **Manual Usage**: If you want to test the application manually, please follow the instructions provided in the [RasPyCam](https://github.com/kaihokori/raspycam) README." >> pr_body.txt
          echo "" >> pr_body.txt
          echo "## Changelog" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "For a detailed list of changes and improvements, refer to the official release notes of RasPyCam version \`${{ github.event.release.tag_name }}\`:" >> pr_body.txt
          echo "" >> pr_body.txt
          cat release_notes_trimmed.txt >> pr_body.txt
          echo "" >> pr_body.txt

      - name: Create and Merge Pull Request
        env:
          PAT: ${{ secrets.PAT }}
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"
          gh pr create \
            --title "Update RasPyCam to ${{ github.event.release.tag_name }}" \
            --body-file pr_body.txt \
            --base main \
            --head "${FORKED_REPO}:update-raspycam-${{ github.event.release.tag_name }}" \
            --repo ${{ secrets.FORKED_REPO }} \
            --assignee "@me" \
            --reviewer "@me"
          
          gh pr merge \
            --auto --squash --delete-branch

      - name: Clean up
        run: |
          rm -rf ./rpi_cam_web_interface release_notes.txt raspycam pr_body.txt
