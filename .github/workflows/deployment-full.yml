name: Deployment (Full Release)

permissions:
  contents: write

on:
  release:
    types:
      - published

jobs:
  pull_request:
    name: Full Release
    runs-on: ubuntu-latest

    steps:
      - name: Checkout backend repository
        uses: actions/checkout@v4

      - name: Install GitHub CLI
        run: |
          sudo apt-get install -y gh

      - name: Download binaries from the latest release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          release_response=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/kaihokori/raspycam/releases/latest)

          # Fetch the URLs of the binaries for each architecture
          asset_url_armv6=$(echo "$release_response" | jq -r '.assets[] | select(.name == "raspymjpeg-armv6.tar.gz") | .browser_download_url')
          asset_url_armv7=$(echo "$release_response" | jq -r '.assets[] | select(.name == "raspymjpeg-armv7.tar.gz") | .browser_download_url')
          asset_url_arm64=$(echo "$release_response" | jq -r '.assets[] | select(.name == "raspymjpeg-arm64.tar.gz") | .browser_download_url')

          # Download each binary
          curl -L -o raspymjpeg-armv6.tar.gz -H "Authorization: token $GITHUB_TOKEN" "$asset_url_armv6"
          curl -L -o raspymjpeg-armv7.tar.gz -H "Authorization: token $GITHUB_TOKEN" "$asset_url_armv7"
          curl -L -o raspymjpeg-arm64.tar.gz -H "Authorization: token $GITHUB_TOKEN" "$asset_url_arm64"

      - name: Clone forked frontend repository
        env:
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
        run: |
          git clone https://github.com/$FORKED_REPO.git rpi_cam_web_interface
          cd rpi_cam_web_interface

      - name: Sync fork with upstream using GitHub CLI
        env:
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
          GH_TOKEN: ${{ secrets.PAT }}
        run: |
          cd rpi_cam_web_interface
          gh repo sync $FORKED_REPO --source traitsaponin/rpi_cam_web_interface --branch main

      - name: Create new branch for update
        run: |
          git checkout -b update-raspymjpeg-${{ github.event.release.tag_name }}

      - name: Reset target directory
        run: |
          rm -rf etc/raspymjpeg

      - name: Move binaries to the target directory
        run: |
          mkdir -p etc/raspymjpeg
          mv ../raspymjpeg-armv6.tar.gz etc/raspymjpeg/raspymjpeg-armv6.tar.gz
          mv ../raspymjpeg-armv7.tar.gz etc/raspymjpeg/raspymjpeg-armv7.tar.gz
          mv ../raspymjpeg-arm64.tar.gz etc/raspymjpeg/raspymjpeg-arm64.tar.gz

      - name: Stage, Commit, and Push Changes
        env:
          PAT: ${{ secrets.PAT }}
          FORKED_REPO: ${{ secrets.FORKED_REPO }}
        run: |
          cd rpi_cam_web_interface
          git config user.name "$(git log -n 1 --pretty=format:%an)"
          git config user.email "$(git log -n 1 --pretty=format:%ae)"
          git add etc/raspymjpeg
          if git diff-index --quiet HEAD; then
            echo "No changes to commit, exiting."
            exit 0
          else
            git commit -m "Updating raspymjpeg to ${{ github.event.release.tag_name }}"
            git remote set-url origin https://x-access-token:${{ secrets.PAT }}@github.com/${{ secrets.FORKED_REPO }}.git
            git branch -M update-raspymjpeg-${{ github.event.release.tag_name }}
            git push --set-upstream origin update-raspymjpeg-${{ github.event.release.tag_name }}
          fi

      - name: Fetch Release Notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          RELEASE_URL="https://api.github.com/repos/kaihokori/raspycam/releases/tags/${{ github.event.release.tag_name }}"
          curl -s -H "Authorization: token $GITHUB_TOKEN" $RELEASE_URL | jq -r '.body' > release_notes.txt
          tail -n +2 release_notes.txt > release_notes_trimmed.txt
        
      - name: Create PR body file
        run: |
          echo "# Release Summary" > pr_body.txt
          echo "" >> pr_body.txt
          echo "This PR updates the RasPyCam executable to the latest version \`${{ github.event.release.tag_name }}\`, generated from the [RasPyCam](https://github.com/kaihokori/raspycam) repository." >> pr_body.txt
          echo "" >> pr_body.txt
          echo "## Changes Introduced" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "1. **Change X:**" >> pr_body.txt
          echo "   - [Text]" >> pr_body.txt
          echo "" >> pr_body.txt
          echo "## Changelog" >> pr_body.txt
          cat release_notes_trimmed.txt >> pr_body.txt

      - name: Create Draft Pull Request
        env:
          PAT: ${{ secrets.PAT }}
        run: |
          gh auth login --with-token <<< "${{ secrets.PAT }}"
          gh pr create \
            --title "Update RasPyCam to ${{ github.event.release.tag_name }}" \
            --body-file pr_body.txt \
            --base main \
            --head "kaihokori:update-raspymjpeg-${{ github.event.release.tag_name }}" \
            --repo traitsaponin/rpi_cam_web_interface \
            --draft

      - name: Clean up
        run: |
          rm -rf rpi_cam_web_interface release_notes.txt pr_body.txt etc/raspymjpeg
